plugins {
    id 'java'
    id 'idea'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "org.springframework.boot" version "2.3.0.RELEASE"
    id "com.moowork.node" version "1.3.1"
    id "io.franzbecker.gradle-lombok" version "4.0.0"
}

group = 'com.jcore.cicd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compileOnly('org.projectlombok:lombok:1.18.12')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

ext {
    frontendDir = "$projectDir/src/main/webapp"
}
 processResources {
     dependsOn "frontendCopy"
 }

 task buildAngular(type: NpmTask) {
     dependsOn "installAngular"

     // Set input and output so Gradle can
     // determine if task is up-to-date.
     inputs.dir "${frontendDir}/e2e"
     inputs.dir "${frontendDir}/src"
     inputs.dir "${frontendDir}/node_modules"
     outputs.dir "${frontendDir}/dist"

     args = ['run-script', 'build']
     execOverrides {
         it.workingDir "$frontendDir"
     }
 }

 task installAngular(type: NpmTask) {
     // Set input and output so Gradle can
     // determine if task is up-to-date.
     inputs.file "${frontendDir}/package.json"
     outputs.dir "${frontendDir}/node_modules"

     args = ['install']
     execOverrides {
         it.workingDir "$frontendDir"
     }
 }

 task frontendCopy(type: Copy) {
     from buildAngular
     into "${sourceSets.main.output.resourcesDir}/static"
 }
